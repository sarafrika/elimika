package apps.sarafrika.elimika.course.dto;

import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.v3.oas.annotations.media.Schema;
import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Min;

import java.time.LocalDateTime;
import java.util.UUID;

/**
 * Content Progress Data Transfer Object
 * <p>
 * Represents student progress tracking for course content in the Sarafrika Elimika system,
 * including access patterns, completion status, and engagement metrics.
 *
 * @author Wilfred Njuguna
 * @version 1.0
 * @since 2024-06-30
 */
@Schema(
        name = "ContentProgress",
        description = "Student progress tracking for course content with access and completion metrics",
        example = """
        {
            "uuid": "p1r2o3g4-5r6e-7s8s-9p10-abcdefghijkl",
            "enrollment_uuid": "e1n2r3o4-5l6l-7m8e-9n10-abcdefghijkl",
            "content_uuid": "c1o2n3t4-5e6n-7t8u-9u10-abcdefghijkl",
            "is_accessed": true,
            "is_completed": true,
            "access_count": 5,
            "first_accessed_at": "2024-04-01T09:15:00",
            "last_accessed_at": "2024-04-05T16:30:00",
            "completed_at": "2024-04-03T14:45:00",
            "created_date": "2024-04-01T09:15:00",
            "created_by": "system@sarafrika.com",
            "updated_date": "2024-04-05T16:30:00",
            "updated_by": "system@sarafrika.com",
            "progress_category": "Completed Content",
            "completion_status": "Completed",
            "engagement_level": "High Engagement",
            "access_pattern": "Multiple Sessions",
            "progress_summary": "Completed after 5 accesses over 4 days"
        }
        """
)
public record ContentProgressDTO(

        @Schema(
                description = "**[READ-ONLY]** Unique system identifier for the content progress record. Auto-generated by the system.",
                example = "p1r2o3g4-5r6e-7s8s-9p10-abcdefghijkl",
                accessMode = Schema.AccessMode.READ_ONLY,
                requiredMode = Schema.RequiredMode.NOT_REQUIRED
        )
        @JsonProperty(value = "uuid", access = JsonProperty.Access.READ_ONLY)
        UUID uuid,

        @Schema(
                description = "**[REQUIRED]** Reference to the enrollment UUID of the student whose progress is being tracked.",
                example = "e1n2r3o4-5l6l-7m8e-9n10-abcdefghijkl",
                requiredMode = Schema.RequiredMode.REQUIRED
        )
        @NotNull(message = "Enrollment UUID is required")
        @JsonProperty("enrollment_uuid")
        UUID enrollmentUuid,

        @Schema(
                description = "**[REQUIRED]** Reference to the content UUID being tracked for progress.",
                example = "c1o2n3t4-5e6n-7t8u-9u10-abcdefghijkl",
                requiredMode = Schema.RequiredMode.REQUIRED
        )
        @NotNull(message = "Content UUID is required")
        @JsonProperty("content_uuid")
        UUID contentUuid,

        @Schema(
                description = "**[OPTIONAL]** Indicates if the student has accessed this content at least once.",
                example = "true",
                requiredMode = Schema.RequiredMode.NOT_REQUIRED
        )
        @JsonProperty("is_accessed")
        Boolean isAccessed,

        @Schema(
                description = "**[OPTIONAL]** Indicates if the student has completed this content.",
                example = "true",
                requiredMode = Schema.RequiredMode.NOT_REQUIRED
        )
        @JsonProperty("is_completed")
        Boolean isCompleted,

        @Schema(
                description = "**[OPTIONAL]** Number of times the student has accessed this content.",
                example = "5",
                minimum = "0",
                requiredMode = Schema.RequiredMode.NOT_REQUIRED
        )
        @Min(value = 0, message = "Access count must be non-negative")
        @JsonProperty("access_count")
        Integer accessCount,

        @Schema(
                description = "**[OPTIONAL]** Timestamp when the student first accessed this content.",
                example = "2024-04-01T09:15:00",
                format = "date-time",
                requiredMode = Schema.RequiredMode.NOT_REQUIRED
        )
        @JsonProperty("first_accessed_at")
        LocalDateTime firstAccessedAt,

        @Schema(
                description = "**[OPTIONAL]** Timestamp when the student last accessed this content.",
                example = "2024-04-05T16:30:00",
                format = "date-time",
                requiredMode = Schema.RequiredMode.NOT_REQUIRED
        )
        @JsonProperty("last_accessed_at")
        LocalDateTime lastAccessedAt,

        @Schema(
                description = "**[OPTIONAL]** Timestamp when the student completed this content.",
                example = "2024-04-03T14:45:00",
                format = "date-time",
                requiredMode = Schema.RequiredMode.NOT_REQUIRED
        )
        @JsonProperty("completed_at")
        LocalDateTime completedAt,

        @Schema(
                description = "**[READ-ONLY]** Timestamp when the progress record was created. Automatically set by the system.",
                example = "2024-04-01T09:15:00",
                format = "date-time",
                accessMode = Schema.AccessMode.READ_ONLY,
                requiredMode = Schema.RequiredMode.NOT_REQUIRED
        )
        @JsonProperty(value = "created_date", access = JsonProperty.Access.READ_ONLY)
        LocalDateTime createdDate,

        @Schema(
                description = "**[READ-ONLY]** System identifier or username that created this progress record. Used for audit trails.",
                example = "system@sarafrika.com",
                accessMode = Schema.AccessMode.READ_ONLY,
                requiredMode = Schema.RequiredMode.NOT_REQUIRED
        )
        @JsonProperty(value = "created_by", access = JsonProperty.Access.READ_ONLY)
        String createdBy,

        @Schema(
                description = "**[READ-ONLY]** Timestamp when the progress record was last modified. Automatically updated by the system.",
                example = "2024-04-05T16:30:00",
                format = "date-time",
                accessMode = Schema.AccessMode.READ_ONLY,
                requiredMode = Schema.RequiredMode.NOT_REQUIRED
        )
        @JsonProperty(value = "updated_date", access = JsonProperty.Access.READ_ONLY)
        LocalDateTime updatedDate,

        @Schema(
                description = "**[READ-ONLY]** System identifier or username that last modified this progress record. Used for audit trails.",
                example = "system@sarafrika.com",
                accessMode = Schema.AccessMode.READ_ONLY,
                requiredMode = Schema.RequiredMode.NOT_REQUIRED
        )
        @JsonProperty(value = "updated_by", access = JsonProperty.Access.READ_ONLY)
        String updatedBy

) {

    /**
     * Returns a formatted category based on progress status.
     *
     * @return Formatted progress category
     */
    @JsonProperty(value = "progress_category", access = JsonProperty.Access.READ_ONLY)
    @Schema(
            description = "**[READ-ONLY]** Formatted category of the progress based on completion and access status.",
            example = "Completed Content",
            accessMode = Schema.AccessMode.READ_ONLY
    )
    public String getProgressCategory() {
        boolean accessed = isAccessed != null && isAccessed;
        boolean completed = isCompleted != null && isCompleted;

        if (completed) {
            return "Completed Content";
        } else if (accessed) {
            return "In Progress Content";
        }

        return "Unaccessed Content";
    }

    /**
     * Returns the completion status of the content.
     *
     * @return Completion status description
     */
    @JsonProperty(value = "completion_status", access = JsonProperty.Access.READ_ONLY)
    @Schema(
            description = "**[READ-ONLY]** Current completion status of the content for the student.",
            example = "Completed",
            accessMode = Schema.AccessMode.READ_ONLY
    )
    public String getCompletionStatus() {
        boolean accessed = isAccessed != null && isAccessed;
        boolean completed = isCompleted != null && isCompleted;

        if (completed) {
            return "Completed";
        } else if (accessed) {
            return "In Progress";
        }

        return "Not Started";
    }

    /**
     * Returns an assessment of student engagement level.
     *
     * @return Engagement level classification
     */
    @JsonProperty(value = "engagement_level", access = JsonProperty.Access.READ_ONLY)
    @Schema(
            description = "**[READ-ONLY]** Assessment of student engagement level based on access patterns.",
            example = "High Engagement",
            accessMode = Schema.AccessMode.READ_ONLY
    )
    public String getEngagementLevel() {
        if (accessCount == null || accessCount == 0) {
            return "No Engagement";
        }

        if (accessCount >= 5) {
            return "High Engagement";
        } else if (accessCount >= 3) {
            return "Moderate Engagement";
        } else if (accessCount >= 1) {
            return "Low Engagement";
        }

        return "No Engagement";
    }

    /**
     * Returns a description of the access pattern.
     *
     * @return Access pattern classification
     */
    @JsonProperty(value = "access_pattern", access = JsonProperty.Access.READ_ONLY)
    @Schema(
            description = "**[READ-ONLY]** Classification of how the student accessed this content.",
            example = "Multiple Sessions",
            accessMode = Schema.AccessMode.READ_ONLY
    )
    public String getAccessPattern() {
        if (accessCount == null || accessCount == 0) {
            return "No Access";
        }

        if (accessCount == 1) {
            return "Single Session";
        } else if (accessCount <= 3) {
            return "Few Sessions";
        } else {
            return "Multiple Sessions";
        }
    }

    /**
     * Returns a comprehensive progress summary.
     *
     * @return Progress summary for reporting purposes
     */
    @JsonProperty(value = "progress_summary", access = JsonProperty.Access.READ_ONLY)
    @Schema(
            description = "**[READ-ONLY]** Comprehensive summary of the student's progress with this content.",
            example = "Completed after 5 accesses over 4 days",
            accessMode = Schema.AccessMode.READ_ONLY
    )
    public String getProgressSummary() {
        boolean accessed = isAccessed != null && isAccessed;
        boolean completed = isCompleted != null && isCompleted;
        int accesses = accessCount != null ? accessCount : 0;

        if (!accessed) {
            return "Content not yet accessed";
        }

        StringBuilder summary = new StringBuilder();

        if (completed) {
            summary.append("Completed");
        } else {
            summary.append("In progress");
        }

        if (accesses > 0) {
            summary.append(" after ").append(accesses);
            summary.append(accesses == 1 ? " access" : " accesses");
        }

        if (firstAccessedAt != null && lastAccessedAt != null && !firstAccessedAt.equals(lastAccessedAt)) {
            long daysBetween = java.time.Duration.between(firstAccessedAt, lastAccessedAt).toDays();
            if (daysBetween > 0) {
                summary.append(" over ").append(daysBetween);
                summary.append(daysBetween == 1 ? " day" : " days");
            }
        }

        return summary.toString();
    }
}