package apps.sarafrika.elimika.course.dto;

import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.v3.oas.annotations.media.Schema;
import jakarta.validation.constraints.*;

import java.time.LocalDateTime;
import java.util.UUID;

/**
 * Grading Level Data Transfer Object
 * <p>
 * Represents grading scales and levels in the Sarafrika Elimika system,
 * defining assessment criteria from distinction to no effort grades.
 *
 * @author Wilfred Njuguna
 * @version 1.0
 * @since 2024-06-30
 */
@Schema(
        name = "GradingLevel",
        description = "Grading scale level with points and ordering for assessments",
        example = """
        {
            "uuid": "g1r2a3d4-5i6n-7g8l-9v10-abcdefghijkl",
            "name": "Distinction",
            "points": 5,
            "level_order": 1,
            "created_date": "2024-04-01T12:00:00",
            "created_by": "system",
            "updated_date": "2024-04-15T15:30:00",
            "updated_by": "admin@sarafrika.com",
            "grade_display": "Level 1: Distinction (5 points)",
            "is_passing_grade": true,
            "grade_category": "Excellent",
            "percentage_range": "90-100%"
        }
        """
)
public record GradingLevelDTO(

        @Schema(
                description = "**[READ-ONLY]** Unique system identifier for the grading level. Auto-generated by the system.",
                example = "g1r2a3d4-5i6n-7g8l-9v10-abcdefghijkl",
                accessMode = Schema.AccessMode.READ_ONLY,
                requiredMode = Schema.RequiredMode.NOT_REQUIRED
        )
        @JsonProperty(value = "uuid", access = JsonProperty.Access.READ_ONLY)
        UUID uuid,

        @Schema(
                description = "**[REQUIRED]** Name of the grading level. Must be unique across all grading levels.",
                example = "Distinction",
                requiredMode = Schema.RequiredMode.REQUIRED,
                maxLength = 50
        )
        @NotBlank(message = "Grading level name is required")
        @Size(max = 50, message = "Name must not exceed 50 characters")
        @JsonProperty("name")
        String name,

        @Schema(
                description = "**[REQUIRED]** Point value assigned to this grading level for scoring calculations.",
                example = "5",
                requiredMode = Schema.RequiredMode.REQUIRED,
                minimum = "1",
                maximum = "10"
        )
        @NotNull(message = "Points value is required")
        @Min(value = 1, message = "Points must be at least 1")
        @Max(value = 10, message = "Points must not exceed 10")
        @JsonProperty("points")
        Integer points,

        @Schema(
                description = "**[REQUIRED]** Numeric order defining the grade hierarchy. Lower numbers indicate higher grades.",
                example = "1",
                requiredMode = Schema.RequiredMode.REQUIRED,
                minimum = "1",
                maximum = "10"
        )
        @NotNull(message = "Level order is required")
        @Min(value = 1, message = "Level order must be at least 1")
        @Max(value = 10, message = "Level order must not exceed 10")
        @JsonProperty("level_order")
        Integer levelOrder,

        @Schema(
                description = "**[READ-ONLY]** Timestamp when the grading level was created. Automatically set by the system.",
                example = "2024-04-01T12:00:00",
                format = "date-time",
                accessMode = Schema.AccessMode.READ_ONLY,
                requiredMode = Schema.RequiredMode.NOT_REQUIRED
        )
        @JsonProperty(value = "created_date", access = JsonProperty.Access.READ_ONLY)
        LocalDateTime createdDate,

        @Schema(
                description = "**[READ-ONLY]** Email or username of the user who created this grading level. Used for audit trails.",
                example = "system",
                accessMode = Schema.AccessMode.READ_ONLY,
                requiredMode = Schema.RequiredMode.NOT_REQUIRED
        )
        @JsonProperty(value = "created_by", access = JsonProperty.Access.READ_ONLY)
        String createdBy,

        @Schema(
                description = "**[READ-ONLY]** Timestamp when the grading level was last modified. Automatically updated by the system.",
                example = "2024-04-15T15:30:00",
                format = "date-time",
                accessMode = Schema.AccessMode.READ_ONLY,
                requiredMode = Schema.RequiredMode.NOT_REQUIRED
        )
        @JsonProperty(value = "updated_date", access = JsonProperty.Access.READ_ONLY)
        LocalDateTime updatedDate,

        @Schema(
                description = "**[READ-ONLY]** Email or username of the user who last modified this grading level. Used for audit trails.",
                example = "admin@sarafrika.com",
                accessMode = Schema.AccessMode.READ_ONLY,
                requiredMode = Schema.RequiredMode.NOT_REQUIRED
        )
        @JsonProperty(value = "updated_by", access = JsonProperty.Access.READ_ONLY)
        String updatedBy

) {

    /**
     * Returns a formatted display string including level, name, and points.
     *
     * @return Formatted grade display
     */
    @JsonProperty(value = "grade_display", access = JsonProperty.Access.READ_ONLY)
    @Schema(
            description = "**[READ-ONLY]** Formatted display of grade level with complete information.",
            example = "Level 1: Distinction (5 points)",
            accessMode = Schema.AccessMode.READ_ONLY
    )
    public String getGradeDisplay() {
        return "Level " + levelOrder + ": " + name + " (" + points + " point" +
                (points != 1 ? "s" : "") + ")";
    }

}