package apps.sarafrika.elimika.course.dto;

import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.v3.oas.annotations.media.Schema;
import jakarta.validation.constraints.*;

import java.time.LocalDateTime;
import java.util.UUID;

/**
 * Category Data Transfer Object
 * <p>
 * Represents a course category in the Sarafrika Elimika system, supporting hierarchical
 * organization of courses with parent-child relationships.
 *
 * @author Wilfred Njuguna
 * @version 1.0
 * @since 2024-06-30
 */
@Schema(
        name = "Category",
        description = "Course category supporting hierarchical organization",
        example = """
        {
            "uuid": "c1a2t3e4-5g6o-7r8y-9a10-abcdefghijkl",
            "name": "Programming",
            "description": "Software development and programming courses",
            "parent_uuid": "t1e2c3h4-5n6o-7l8o-9g10-abcdefghijkl",
            "is_active": true,
            "created_date": "2024-04-01T12:00:00",
            "created_by": "admin@sarafrika.com",
            "updated_date": "2024-04-15T15:30:00",
            "updated_by": "admin@sarafrika.com",
            "is_root_category": false,
            "category_path": "Technology > Programming"
        }
        """
)
public record CategoryDTO(

        @Schema(
                description = "**[READ-ONLY]** Unique system identifier for the category. Auto-generated by the system.",
                example = "c1a2t3e4-5g6o-7r8y-9a10-abcdefghijkl",
                accessMode = Schema.AccessMode.READ_ONLY,
                requiredMode = Schema.RequiredMode.NOT_REQUIRED
        )
        @JsonProperty(value = "uuid", access = JsonProperty.Access.READ_ONLY)
        UUID uuid,

        @Schema(
                description = "**[REQUIRED]** Category name. Must be unique within the same parent category.",
                example = "Programming",
                requiredMode = Schema.RequiredMode.REQUIRED,
                maxLength = 100
        )
        @NotBlank(message = "Category name is required")
        @Size(max = 100, message = "Category name must not exceed 100 characters")
        @JsonProperty("name")
        String name,

        @Schema(
                description = "**[OPTIONAL]** Detailed description of the category and its scope.",
                example = "Software development and programming courses covering various languages and frameworks",
                maxLength = 500,
                requiredMode = Schema.RequiredMode.NOT_REQUIRED
        )
        @Size(max = 500, message = "Description must not exceed 500 characters")
        @JsonProperty("description")
        String description,

        @Schema(
                description = "**[OPTIONAL]** Reference to parent category UUID for hierarchical organization. Null for root categories.",
                example = "t1e2c3h4-5n6o-7l8o-9g10-abcdefghijkl",
                nullable = true,
                requiredMode = Schema.RequiredMode.NOT_REQUIRED
        )
        @JsonProperty("parent_uuid")
        UUID parentUuid,

        @Schema(
                description = "**[OPTIONAL]** Indicates if the category is active and available for course assignment.",
                example = "true",
                requiredMode = Schema.RequiredMode.NOT_REQUIRED
        )
        @JsonProperty("is_active")
        Boolean isActive,

        @Schema(
                description = "**[READ-ONLY]** Timestamp when the category was created. Automatically set by the system.",
                example = "2024-04-01T12:00:00",
                format = "date-time",
                accessMode = Schema.AccessMode.READ_ONLY,
                requiredMode = Schema.RequiredMode.NOT_REQUIRED
        )
        @JsonProperty(value = "created_date", access = JsonProperty.Access.READ_ONLY)
        LocalDateTime createdDate,

        @Schema(
                description = "**[READ-ONLY]** Email or username of the user who created this category. Used for audit trails.",
                example = "admin@sarafrika.com",
                accessMode = Schema.AccessMode.READ_ONLY,
                requiredMode = Schema.RequiredMode.NOT_REQUIRED
        )
        @JsonProperty(value = "created_by", access = JsonProperty.Access.READ_ONLY)
        String createdBy,

        @Schema(
                description = "**[READ-ONLY]** Timestamp when the category was last modified. Automatically updated by the system.",
                example = "2024-04-15T15:30:00",
                format = "date-time",
                accessMode = Schema.AccessMode.READ_ONLY,
                requiredMode = Schema.RequiredMode.NOT_REQUIRED
        )
        @JsonProperty(value = "updated_date", access = JsonProperty.Access.READ_ONLY)
        LocalDateTime updatedDate,

        @Schema(
                description = "**[READ-ONLY]** Email or username of the user who last modified this category. Used for audit trails.",
                example = "admin@sarafrika.com",
                accessMode = Schema.AccessMode.READ_ONLY,
                requiredMode = Schema.RequiredMode.NOT_REQUIRED
        )
        @JsonProperty(value = "updated_by", access = JsonProperty.Access.READ_ONLY)
        String updatedBy

) {

    /**
     * Checks if this is a root category (no parent).
     *
     * @return true if parentUuid is null, false otherwise
     */
    @JsonProperty(value = "is_root_category", access = JsonProperty.Access.READ_ONLY)
    @Schema(
            description = "**[READ-ONLY]** Indicates if this is a root category with no parent.",
            example = "false",
            accessMode = Schema.AccessMode.READ_ONLY
    )
    public boolean isRootCategory() {
        return parentUuid == null;
    }

    /**
     * Returns a formatted category path for display purposes.
     * Note: This would typically be computed with parent category data.
     *
     * @return Category name as path (enhanced version would show full hierarchy)
     */
    @JsonProperty(value = "category_path", access = JsonProperty.Access.READ_ONLY)
    @Schema(
            description = "**[READ-ONLY]** Hierarchical path showing category position in the tree structure.",
            example = "Technology > Programming",
            accessMode = Schema.AccessMode.READ_ONLY
    )
    public String getCategoryPath() {
        // In a real implementation, this would build the full path from root to current
        return name; // Simplified version
    }
}