package apps.sarafrika.elimika.course.dto;

import apps.sarafrika.elimika.course.util.enums.RequirementType;
import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.v3.oas.annotations.media.Schema;
import jakarta.validation.constraints.NotBlank;
import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;

import java.time.LocalDateTime;
import java.util.UUID;

/**
 * Course Requirement Data Transfer Object
 * <p>
 * Represents prerequisites and requirements for course participation in the Sarafrika Elimika system,
 * including student, training center, and instructor requirements.
 *
 * @author Wilfred Njuguna
 * @version 1.0
 * @since 2024-06-30
 */
@Schema(
        name = "CourseRequirement",
        description = "Course prerequisites and participation requirements",
        example = """
        {
            "uuid": "r1e2q3u4-5i6r-7e8m-9e10-abcdefghijkl",
            "course_uuid": "c1o2u3r4-5s6e-7d8a-9t10-abcdefghijkl",
            "requirement_type": "STUDENT",
            "requirement_text": "Basic knowledge of Java programming and object-oriented concepts",
            "is_mandatory": true,
            "created_date": "2024-04-01T12:00:00",
            "created_by": "instructor@sarafrika.com",
            "updated_date": "2024-04-15T15:30:00",
            "updated_by": "instructor@sarafrika.com",
            "requirement_category": "Student Prerequisite",
            "is_technical_requirement": true,
            "priority_level": "High"
        }
        """
)
public record CourseRequirementDTO(

        @Schema(
                description = "**[READ-ONLY]** Unique system identifier for the course requirement. Auto-generated by the system.",
                example = "r1e2q3u4-5i6r-7e8m-9e10-abcdefghijkl",
                accessMode = Schema.AccessMode.READ_ONLY,
                requiredMode = Schema.RequiredMode.NOT_REQUIRED
        )
        @JsonProperty(value = "uuid", access = JsonProperty.Access.READ_ONLY)
        UUID uuid,

        @Schema(
                description = "**[REQUIRED]** Reference to the course UUID that this requirement applies to.",
                example = "c1o2u3r4-5s6e-7d8a-9t10-abcdefghijkl",
                requiredMode = Schema.RequiredMode.REQUIRED
        )
        @NotNull(message = "Course UUID is required")
        @JsonProperty("course_uuid")
        UUID courseUuid,

        @Schema(
                description = "**[REQUIRED]** Type of requirement specifying who or what this applies to.",
                example = "STUDENT",
                requiredMode = Schema.RequiredMode.REQUIRED,
                allowableValues = {"STUDENT", "TRAINING_CENTER", "INSTRUCTOR"}
        )
        @NotNull(message = "Requirement type is required")
        @JsonProperty("requirement_type")
        RequirementType requirementType,

        @Schema(
                description = "**[REQUIRED]** Detailed description of the specific requirement or prerequisite.",
                example = "Basic knowledge of Java programming and object-oriented concepts including classes, inheritance, and polymorphism",
                requiredMode = Schema.RequiredMode.REQUIRED,
                maxLength = 1000
        )
        @NotBlank(message = "Requirement text is required")
        @Size(max = 1000, message = "Requirement text must not exceed 1000 characters")
        @JsonProperty("requirement_text")
        String requirementText,

        @Schema(
                description = "**[OPTIONAL]** Indicates if this requirement is mandatory or optional for course participation.",
                example = "true",
                requiredMode = Schema.RequiredMode.NOT_REQUIRED
        )
        @JsonProperty("is_mandatory")
        Boolean isMandatory,

        @Schema(
                description = "**[READ-ONLY]** Timestamp when the requirement was created. Automatically set by the system.",
                example = "2024-04-01T12:00:00",
                format = "date-time",
                accessMode = Schema.AccessMode.READ_ONLY,
                requiredMode = Schema.RequiredMode.NOT_REQUIRED
        )
        @JsonProperty(value = "created_date", access = JsonProperty.Access.READ_ONLY)
        LocalDateTime createdDate,

        @Schema(
                description = "**[READ-ONLY]** Email or username of the user who created this requirement. Used for audit trails.",
                example = "instructor@sarafrika.com",
                accessMode = Schema.AccessMode.READ_ONLY,
                requiredMode = Schema.RequiredMode.NOT_REQUIRED
        )
        @JsonProperty(value = "created_by", access = JsonProperty.Access.READ_ONLY)
        String createdBy,

        @Schema(
                description = "**[READ-ONLY]** Timestamp when the requirement was last modified. Automatically updated by the system.",
                example = "2024-04-15T15:30:00",
                format = "date-time",
                accessMode = Schema.AccessMode.READ_ONLY,
                requiredMode = Schema.RequiredMode.NOT_REQUIRED
        )
        @JsonProperty(value = "updated_date", access = JsonProperty.Access.READ_ONLY)
        LocalDateTime updatedDate,

        @Schema(
                description = "**[READ-ONLY]** Email or username of the user who last modified this requirement. Used for audit trails.",
                example = "instructor@sarafrika.com",
                accessMode = Schema.AccessMode.READ_ONLY,
                requiredMode = Schema.RequiredMode.NOT_REQUIRED
        )
        @JsonProperty(value = "updated_by", access = JsonProperty.Access.READ_ONLY)
        String updatedBy

) {
}