package apps.sarafrika.elimika.coursecreator.dto;

import apps.sarafrika.elimika.shared.utils.validation.ValidUrl;
import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.v3.oas.annotations.media.Schema;
import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;

import java.time.LocalDateTime;
import java.util.UUID;

/**
 * Course Creator Data Transfer Object
 * <p>
 * Represents a course creator profile in the Sarafrika Elimika system.
 * Course creators are specialized users whose sole mandate is creating educational content.
 * They differ from instructors in that they focus on content creation rather than instruction delivery.
 *
 * @author Wilfred Njuguna
 * @version 1.0
 * @since 2025-09-30
 */
@Schema(
        name = "CourseCreator",
        description = "Course creator profile for users dedicated to educational content creation",
        example = """
        {
            "uuid": "c1r2e3a4-5t6o-7r89-0abc-defghijklmno",
            "user_uuid": "u1s2e3r4-5a6c-7t89-0abc-defghijklmno",
            "full_name": "Alice Johnson",
            "bio": "Passionate content creator with expertise in designing engaging online courses. Specializes in technical training materials and interactive learning experiences.",
            "professional_headline": "Educational Content Designer & Course Architect",
            "website": "https://alicejohnson.com",
            "admin_verified": true,
            "created_date": "2024-09-30T10:00:00",
            "created_by": "admin@sarafrika.com",
            "updated_date": "2024-09-30T15:30:00",
            "updated_by": "admin@sarafrika.com",
            "is_profile_complete": true
        }
        """
)
public record CourseCreatorDTO(

        @Schema(
                description = "**[READ-ONLY]** Unique system identifier for the course creator profile. Auto-generated by the system.",
                example = "c1r2e3a4-5t6o-7r89-0abc-defghijklmno",
                accessMode = Schema.AccessMode.READ_ONLY,
                requiredMode = Schema.RequiredMode.NOT_REQUIRED
        )
        @JsonProperty(value = "uuid", access = JsonProperty.Access.READ_ONLY)
        UUID uuid,

        @Schema(
                description = "**[REQUIRED]** Reference to the base user account UUID. Links course creator profile to user authentication and personal details.",
                example = "u1s2e3r4-5a6c-7t89-0abc-defghijklmno",
                requiredMode = Schema.RequiredMode.REQUIRED
        )
        @NotNull(message = "User UUID is required")
        @JsonProperty("user_uuid")
        UUID userUuid,

        @Schema(
                description = "**[REQUIRED]** Complete name of the course creator. Used in course authorship and creator profiles.",
                example = "Alice Johnson",
                maxLength = 255,
                requiredMode = Schema.RequiredMode.REQUIRED
        )
        @NotNull(message = "Full name is required")
        @Size(min = 1, max = 255, message = "Full name must be between 1 and 255 characters")
        @JsonProperty("full_name")
        String fullName,

        @Schema(
                description = "**[OPTIONAL]** Professional biography describing course creator's background, expertise, and content creation philosophy. Used in creator profiles and course descriptions.",
                example = "Passionate content creator with expertise in designing engaging online courses. Specializes in technical training materials and interactive learning experiences.",
                maxLength = 2000,
                nullable = true,
                requiredMode = Schema.RequiredMode.NOT_REQUIRED
        )
        @Size(max = 2000, message = "Bio must not exceed 2000 characters")
        @JsonProperty("bio")
        String bio,

        @Schema(
                description = "**[OPTIONAL]** Professional headline or title that summarizes course creator's expertise and role. Used in search results and creator listings.",
                example = "Educational Content Designer & Course Architect",
                maxLength = 500,
                nullable = true,
                requiredMode = Schema.RequiredMode.NOT_REQUIRED
        )
        @Size(max = 500, message = "Professional headline must not exceed 500 characters")
        @JsonProperty("professional_headline")
        String professionalHeadline,

        @Schema(
                description = "**[OPTIONAL]** Professional website or portfolio URL. Used to showcase course creator's work and additional credentials.",
                example = "https://alicejohnson.com",
                format = "uri",
                maxLength = 500,
                nullable = true,
                requiredMode = Schema.RequiredMode.NOT_REQUIRED
        )
        @Size(max = 500, message = "Website URL must not exceed 500 characters")
        @ValidUrl
        @JsonProperty("website")
        String website,

        @Schema(
                description = "**[READ-ONLY]** Indicates whether the course creator has been verified by an administrator. True if verified, false if not verified.",
                example = "true",
                accessMode = Schema.AccessMode.READ_ONLY,
                requiredMode = Schema.RequiredMode.NOT_REQUIRED
        )
        @JsonProperty(value = "admin_verified", access = JsonProperty.Access.READ_ONLY)
        Boolean adminVerified,

        @Schema(
                description = "**[READ-ONLY]** Timestamp when the course creator profile was first created. Automatically set by the system.",
                example = "2024-09-30T10:00:00",
                format = "date-time",
                accessMode = Schema.AccessMode.READ_ONLY,
                requiredMode = Schema.RequiredMode.NOT_REQUIRED
        )
        @JsonProperty(value = "created_date", access = JsonProperty.Access.READ_ONLY)
        LocalDateTime createdDate,

        @Schema(
                description = "**[READ-ONLY]** Email or username of the user who created this course creator profile. Used for audit trails and administrative purposes.",
                example = "admin@sarafrika.com",
                accessMode = Schema.AccessMode.READ_ONLY,
                requiredMode = Schema.RequiredMode.NOT_REQUIRED
        )
        @JsonProperty(value = "created_by", access = JsonProperty.Access.READ_ONLY)
        String createdBy,

        @Schema(
                description = "**[READ-ONLY]** Timestamp when the course creator profile was last modified. Automatically updated by the system on any changes.",
                example = "2024-09-30T15:30:00",
                format = "date-time",
                accessMode = Schema.AccessMode.READ_ONLY,
                requiredMode = Schema.RequiredMode.NOT_REQUIRED
        )
        @JsonProperty(value = "updated_date", access = JsonProperty.Access.READ_ONLY)
        LocalDateTime updatedDate,

        @Schema(
                description = "**[READ-ONLY]** Email or username of the user who last modified this course creator profile. Used for audit trails and administrative purposes.",
                example = "admin@sarafrika.com",
                accessMode = Schema.AccessMode.READ_ONLY,
                requiredMode = Schema.RequiredMode.NOT_REQUIRED
        )
        @JsonProperty(value = "updated_by", access = JsonProperty.Access.READ_ONLY)
        String updatedBy

) {

        /**
         * Checks if the course creator profile is considered complete based on key fields.
         *
         * @return true if course creator has bio and professional headline
         */
        @JsonProperty(value = "is_profile_complete", access = JsonProperty.Access.READ_ONLY)
        @Schema(
                description = "**[READ-ONLY]** Indicates if the course creator profile is considered complete. Requires bio and professional headline.",
                example = "true",
                accessMode = Schema.AccessMode.READ_ONLY
        )
        public boolean isProfileComplete() {
                return bio != null && !bio.trim().isEmpty() &&
                        professionalHeadline != null && !professionalHeadline.trim().isEmpty();
        }
}