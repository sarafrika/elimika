package apps.sarafrika.elimika.tenancy.dto;

import apps.sarafrika.elimika.tenancy.entity.Invitation;
import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.v3.oas.annotations.media.Schema;
import jakarta.validation.constraints.Email;
import jakarta.validation.constraints.NotBlank;
import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;

import java.time.LocalDateTime;
import java.util.UUID;

/**
 * Invitation Data Transfer Object
 * <p>
 * Represents an email invitation to join an organization or training branch in the Sarafrika Elimika system.
 * Manages the complete invitation lifecycle from creation through acceptance, decline, or expiration.
 *
 * @author Wilfred Njuguna
 * @version 1.0
 * @since 2025-07-09
 */
@Schema(
        name = "Invitation",
        description = "Complete invitation information including recipient details, organization/branch assignment, invitation status, and lifecycle tracking",
        example = """
                {
                    "uuid": "550e8400-e29b-41d4-a716-446655440000",
                    "token": "abc123def456ghi789jkl012mno345pqr678stu901vwx234yz0123456789abcd",
                    "recipient_email": "john.doe@example.com",
                    "recipient_name": "John Doe",
                    "organisation_uuid": "550e8400-e29b-41d4-a716-446655440001",
                    "organisation_name": "Acme Training Institute",
                    "branch_uuid": "550e8400-e29b-41d4-a716-446655440002",
                    "branch_name": "Downtown Branch",
                    "domain_uuid": "550e8400-e29b-41d4-a716-446655440003",
                    "domain_name": "instructor",
                    "inviter_uuid": "550e8400-e29b-41d4-a716-446655440004",
                    "inviter_name": "Jane Smith",
                    "status": "PENDING",
                    "expires_at": "2025-07-16T14:30:00",
                    "accepted_at": null,
                    "declined_at": null,
                    "user_uuid": null,
                    "notes": "Welcome to our training program! We're excited to have you join our team.",
                    "created_date": "2025-07-09T09:00:00",
                    "updated_date": "2025-07-09T09:00:00",
                    "created_by": "admin@organization.com",
                    "updated_by": "admin@organization.com"
                }
                """
)
public record InvitationDTO(

        @Schema(
                description = "**[READ-ONLY]** Unique system identifier for the invitation. Auto-generated by the system and cannot be modified.",
                example = "550e8400-e29b-41d4-a716-446655440000",
                format = "uuid",
                accessMode = Schema.AccessMode.READ_ONLY,
                requiredMode = Schema.RequiredMode.NOT_REQUIRED
        )
        @JsonProperty(value = "uuid", access = JsonProperty.Access.READ_ONLY)
        UUID uuid,

        @Schema(
                description = "**[READ-ONLY]** Unique token used for invitation acceptance and decline links. Generated by the system and used in email URLs for secure invitation processing.",
                example = "abc123def456ghi789jkl012mno345pqr678stu901vwx234yz0123456789abcd",
                minLength = 64,
                maxLength = 64,
                accessMode = Schema.AccessMode.READ_ONLY,
                requiredMode = Schema.RequiredMode.NOT_REQUIRED
        )
        @JsonProperty(value = "token", access = JsonProperty.Access.READ_ONLY)
        String token,

        @Schema(
                description = "**[REQUIRED]** Email address of the invitation recipient. Must be a valid email format and will be used to send invitation emails.",
                example = "john.doe@example.com",
                format = "email",
                maxLength = 100,
                requiredMode = Schema.RequiredMode.REQUIRED
        )
        @NotBlank(message = "Recipient email is required")
        @Email(message = "Recipient email must be a valid email address")
        @Size(max = 100, message = "Recipient email cannot exceed 100 characters")
        @JsonProperty("recipient_email")
        String recipientEmail,

        @Schema(
                description = "**[REQUIRED]** Full name of the invitation recipient. Used in email templates and for display purposes throughout the invitation process.",
                example = "John Doe",
                minLength = 1,
                maxLength = 150,
                requiredMode = Schema.RequiredMode.REQUIRED
        )
        @NotBlank(message = "Recipient name is required")
        @Size(max = 150, message = "Recipient name cannot exceed 150 characters")
        @JsonProperty("recipient_name")
        String recipientName,

        @Schema(
                description = "**[REQUIRED]** UUID of the organization the user is being invited to join. References the target organization for this invitation.",
                example = "550e8400-e29b-41d4-a716-446655440001",
                format = "uuid",
                requiredMode = Schema.RequiredMode.REQUIRED
        )
        @NotNull(message = "Organisation UUID is required")
        @JsonProperty("organisation_uuid")
        UUID organisationUuid,

        @Schema(
                description = "**[READ-ONLY]** Name of the organization for display purposes. Populated by the system based on the organisation_uuid and cannot be directly modified.",
                example = "Acme Training Institute",
                nullable = true,
                accessMode = Schema.AccessMode.READ_ONLY,
                requiredMode = Schema.RequiredMode.NOT_REQUIRED
        )
        @JsonProperty(value = "organisation_name", access = JsonProperty.Access.READ_ONLY)
        String organisationName,

        @Schema(
                description = "**[OPTIONAL]** UUID of the training branch for branch-specific invitations. When provided, the invitation is for a specific branch within the organization.",
                example = "550e8400-e29b-41d4-a716-446655440002",
                format = "uuid",
                nullable = true,
                requiredMode = Schema.RequiredMode.NOT_REQUIRED
        )
        @JsonProperty("branch_uuid")
        UUID branchUuid,

        @Schema(
                description = "**[READ-ONLY]** Name of the training branch for display purposes. Populated by the system based on the branch_uuid and cannot be directly modified.",
                example = "Downtown Branch",
                nullable = true,
                accessMode = Schema.AccessMode.READ_ONLY,
                requiredMode = Schema.RequiredMode.NOT_REQUIRED
        )
        @JsonProperty(value = "branch_name", access = JsonProperty.Access.READ_ONLY)
        String branchName,

        @Schema(
                description = "**[REQUIRED]** UUID of the user domain/role being offered to the recipient. Determines what permissions and access the user will have upon acceptance.",
                example = "550e8400-e29b-41d4-a716-446655440003",
                format = "uuid",
                requiredMode = Schema.RequiredMode.REQUIRED
        )
        @NotNull(message = "Domain UUID is required")
        @JsonProperty("domain_uuid")
        UUID domainUuid,

        @Schema(
                description = "**[READ-ONLY]** Name of the user domain/role for display purposes. Populated by the system based on the domain_uuid and indicates the role being offered.",
                example = "instructor",
                allowableValues = {"student", "instructor", "admin", "organisation_user"},
                nullable = true,
                accessMode = Schema.AccessMode.READ_ONLY,
                requiredMode = Schema.RequiredMode.NOT_REQUIRED
        )
        @JsonProperty(value = "domain_name", access = JsonProperty.Access.READ_ONLY)
        String domainName,

        @Schema(
                description = "**[REQUIRED]** UUID of the user who sent the invitation. References the user who initiated this invitation process.",
                example = "550e8400-e29b-41d4-a716-446655440004",
                format = "uuid",
                requiredMode = Schema.RequiredMode.REQUIRED
        )
        @NotNull(message = "Inviter UUID is required")
        @JsonProperty("inviter_uuid")
        UUID inviterUuid,

        @Schema(
                description = "**[READ-ONLY]** Full name of the user who sent the invitation. Cached for performance and email template purposes, automatically populated by the system.",
                example = "Jane Smith",
                maxLength = 150,
                accessMode = Schema.AccessMode.READ_ONLY,
                requiredMode = Schema.RequiredMode.NOT_REQUIRED
        )
        @JsonProperty(value = "inviter_name", access = JsonProperty.Access.READ_ONLY)
        String inviterName,

        @Schema(
                description = "**[READ-ONLY]** Current status of the invitation in its lifecycle. Automatically managed by the system based on user actions and expiration rules.",
                example = "PENDING",
                allowableValues = {"PENDING", "ACCEPTED", "DECLINED", "EXPIRED", "CANCELLED"},
                defaultValue = "PENDING",
                accessMode = Schema.AccessMode.READ_ONLY,
                requiredMode = Schema.RequiredMode.NOT_REQUIRED
        )
        @JsonProperty(value = "status", access = JsonProperty.Access.READ_ONLY)
        Invitation.InvitationStatus status,

        @Schema(
                description = "**[READ-ONLY]** Date and time when the invitation expires in ISO 8601 format. After this time, the invitation cannot be accepted and will be marked as expired.",
                example = "2025-07-16T14:30:00",
                format = "date-time",
                accessMode = Schema.AccessMode.READ_ONLY,
                requiredMode = Schema.RequiredMode.NOT_REQUIRED
        )
        @JsonProperty(value = "expires_at", access = JsonProperty.Access.READ_ONLY)
        LocalDateTime expiresAt,

        @Schema(
                description = "**[READ-ONLY]** Date and time when the invitation was accepted in ISO 8601 format. Only populated when the invitation status is ACCEPTED.",
                example = "2025-07-10T10:15:30",
                format = "date-time",
                nullable = true,
                accessMode = Schema.AccessMode.READ_ONLY,
                requiredMode = Schema.RequiredMode.NOT_REQUIRED
        )
        @JsonProperty(value = "accepted_at", access = JsonProperty.Access.READ_ONLY)
        LocalDateTime acceptedAt,

        @Schema(
                description = "**[READ-ONLY]** Date and time when the invitation was declined in ISO 8601 format. Only populated when the invitation status is DECLINED.",
                example = "2025-07-10T16:45:00",
                format = "date-time",
                nullable = true,
                accessMode = Schema.AccessMode.READ_ONLY,
                requiredMode = Schema.RequiredMode.NOT_REQUIRED
        )
        @JsonProperty(value = "declined_at", access = JsonProperty.Access.READ_ONLY)
        LocalDateTime declinedAt,

        @Schema(
                description = "**[READ-ONLY]** UUID of the user who accepted the invitation. Only populated when the invitation status is ACCEPTED, linking to the actual user account.",
                example = "550e8400-e29b-41d4-a716-446655440005",
                format = "uuid",
                nullable = true,
                accessMode = Schema.AccessMode.READ_ONLY,
                requiredMode = Schema.RequiredMode.NOT_REQUIRED
        )
        @JsonProperty(value = "user_uuid", access = JsonProperty.Access.READ_ONLY)
        UUID userUuid,

        @Schema(
                description = "**[OPTIONAL]** Optional notes or message included with the invitation. Can contain welcoming text, instructions, or other relevant information for the recipient.",
                example = "Welcome to our training program! We're excited to have you join our team.",
                nullable = true,
                maxLength = 500,
                requiredMode = Schema.RequiredMode.NOT_REQUIRED
        )
        @Size(max = 500, message = "Notes cannot exceed 500 characters")
        @JsonProperty("notes")
        String notes,

        @Schema(
                description = "**[READ-ONLY]** Timestamp when the invitation was first created in ISO 8601 format. Automatically set by the system and cannot be modified.",
                example = "2025-07-09T09:00:00",
                format = "date-time",
                accessMode = Schema.AccessMode.READ_ONLY,
                requiredMode = Schema.RequiredMode.NOT_REQUIRED
        )
        @JsonProperty(value = "created_date", access = JsonProperty.Access.READ_ONLY)
        LocalDateTime createdDate,

        @Schema(
                description = "**[READ-ONLY]** Timestamp when the invitation was last modified in ISO 8601 format. Automatically updated by the system on any changes and cannot be directly modified.",
                example = "2025-07-09T09:00:00",
                format = "date-time",
                accessMode = Schema.AccessMode.READ_ONLY,
                requiredMode = Schema.RequiredMode.NOT_REQUIRED
        )
        @JsonProperty(value = "updated_date", access = JsonProperty.Access.READ_ONLY)
        LocalDateTime updatedDate,

        @Schema(
                description = "**[READ-ONLY]** Email or identifier of who created the invitation. Used for audit trail purposes and automatically populated by the system.",
                example = "admin@organization.com",
                maxLength = 50,
                accessMode = Schema.AccessMode.READ_ONLY,
                requiredMode = Schema.RequiredMode.NOT_REQUIRED
        )
        @JsonProperty(value = "created_by", access = JsonProperty.Access.READ_ONLY)
        String createdBy,

        @Schema(
                description = "**[READ-ONLY]** Email or identifier of who last modified the invitation. Used for audit trail purposes and automatically updated by the system on changes.",
                example = "admin@organization.com",
                maxLength = 50,
                nullable = true,
                accessMode = Schema.AccessMode.READ_ONLY,
                requiredMode = Schema.RequiredMode.NOT_REQUIRED
        )
        @JsonProperty(value = "updated_by", access = JsonProperty.Access.READ_ONLY)
        String updatedBy

) {}