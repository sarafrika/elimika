package apps.sarafrika.elimika.tenancy.dto;

import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.v3.oas.annotations.media.Schema;
import jakarta.validation.constraints.NotBlank;
import jakarta.validation.constraints.Size;

import java.math.BigDecimal;
import java.time.LocalDateTime;
import java.util.UUID;

/**
 * Organisation Data Transfer Object
 * <p>
 * Represents an organisation in the Sarafrika Elimika system with all necessary
 * organisational information, configuration details, and metadata.
 *
 * @author Wilfred Njuguna
 * @version 1.0
 * @since 2025-07-09
 */
@Schema(
        name = "Organisation",
        description = "Complete organisation profile information including basic details, configuration, and metadata",
        example = """
                {
                    "uuid": "b1c2d3e4-f5g6-h7i8-j9k0-lmnopqrstuv",
                    "name": "Sarafrika University",
                    "description": "Leading educational institution in Kenya",
                    "active": true,
                    "licence_no": "EDU-2024-001",
                    "location": "Nairobi, Kenya",
                    "country": "Kenya",
                    "slug": "sarafrika-university",
                    "latitude": -1.2921,
                    "longitude": 36.8219,
                    "created_date": "2024-01-01T09:00:00",
                    "updated_date": "2024-04-15T14:30:00"
                }
                """
)
public record OrganisationDTO(

        @Schema(
                description = "**[READ-ONLY]** Unique system identifier for the organisation. Auto-generated by the system and cannot be modified.",
                example = "b1c2d3e4-f5g6-h7i8-j9k0-lmnopqrstuv",
                format = "uuid",
                accessMode = Schema.AccessMode.READ_ONLY,
                requiredMode = Schema.RequiredMode.NOT_REQUIRED
        )
        @JsonProperty(value = "uuid", access = JsonProperty.Access.READ_ONLY)
        UUID uuid,

        @Schema(
                description = "**[REQUIRED]** Organisation's official name. Used for display purposes and official documentation. Must not be blank.",
                example = "Sarafrika University",
                minLength = 1,
                maxLength = 50,
                requiredMode = Schema.RequiredMode.REQUIRED
        )
        @NotBlank(message = "Organisation name is required")
        @Size(max = 50, message = "Organisation name cannot exceed 50 characters")
        @JsonProperty("name")
        String name,

        @Schema(
                description = "**[OPTIONAL]** Detailed description of the organisation. Provides additional context about the organisation's purpose and activities.",
                example = "Leading educational institution in Kenya",
                nullable = true,
                requiredMode = Schema.RequiredMode.NOT_REQUIRED
        )
        @JsonProperty("description")
        String description,

        @Schema(
                description = "**[REQUIRED]** Indicates whether the organisation is active and can access the system. Inactive organisations cannot perform any operations.",
                example = "true",
                requiredMode = Schema.RequiredMode.REQUIRED
        )
        @JsonProperty("active")
        boolean active,


        @Schema(
                description = "**[OPTIONAL]** Official licence number or registration number for the organisation. Used for regulatory compliance and verification.",
                example = "EDU-2024-001",
                nullable = true,
                maxLength = 100,
                requiredMode = Schema.RequiredMode.NOT_REQUIRED
        )
        @JsonProperty("licence_no")
        String licenceNo,



        @Schema(
                description = "**[OPTIONAL]** Physical location or address of the organisation.",
                example = "Nairobi, Kenya",
                nullable = true,
                maxLength = 200,
                requiredMode = Schema.RequiredMode.NOT_REQUIRED
        )
        @JsonProperty("location")
        String location,

        @Schema(
                description = "**[OPTIONAL]** Country where the organisation is located.",
                example = "Kenya",
                nullable = true,
                maxLength = 100,
                requiredMode = Schema.RequiredMode.NOT_REQUIRED
        )
        @JsonProperty("country")
        String country,

        @Schema(
                description = "**[READ-ONLY]** URL-friendly slug for the organisation's public profile. Auto-generated from the organisation name.",
                example = "sarafrika-university",
                accessMode = Schema.AccessMode.READ_ONLY,
                requiredMode = Schema.RequiredMode.NOT_REQUIRED
        )
        @JsonProperty(value = "slug", access = JsonProperty.Access.READ_ONLY)
        String slug,

        @Schema(
                description = "**[OPTIONAL]** Latitude coordinate for the organisation's location.",
                example = "-1.2921",
                nullable = true,
                requiredMode = Schema.RequiredMode.NOT_REQUIRED
        )
        @JsonProperty("latitude")
        BigDecimal latitude,

        @Schema(
                description = "**[OPTIONAL]** Longitude coordinate for the organisation's location.",
                example = "36.8219",
                nullable = true,
                requiredMode = Schema.RequiredMode.NOT_REQUIRED
        )
        @JsonProperty("longitude")
        BigDecimal longitude,

        @Schema(
                description = "**[READ-ONLY]** Timestamp when the organisation was first created. Automatically set by the system and cannot be modified.",
                example = "2024-01-01T09:00:00",
                format = "date-time",
                accessMode = Schema.AccessMode.READ_ONLY,
                requiredMode = Schema.RequiredMode.NOT_REQUIRED
        )
        @JsonProperty(value = "created_date", access = JsonProperty.Access.READ_ONLY)
        LocalDateTime createdDate,

        @Schema(
                description = "**[READ-ONLY]** Timestamp when the organisation was last updated. Automatically updated by the system on any changes and cannot be directly modified.",
                example = "2024-04-15T14:30:00",
                format = "date-time",
                accessMode = Schema.AccessMode.READ_ONLY,
                requiredMode = Schema.RequiredMode.NOT_REQUIRED
        )
        @JsonProperty(value = "updated_date", access = JsonProperty.Access.READ_ONLY)
        LocalDateTime updatedDate

) {
}